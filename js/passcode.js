'use strict'

const SHOW_PASSCODE_MS = 10000;
let showTimeout = undefined;

function passcode() {
  function whatIsAPasscode() {
    alert('What\'s a passcode?\n\nA passcode is a unique and random string ' +
      'generated by the system.  It\'s a replacement for a username and ' +
      'password.  Click here to show or hide the passcode in case you might ' +
      `need to copy it down.  It will display plain for ${Math.floor(
        SHOW_PASSCODE_MS / 1000)} seconds.`);
  }

  function showPasscode() {
    const b = getButton('showPasscode');
    if(showTimeout) {
      b.t = '*'.repeat(getCookie('passcode').length);
      clearTimeout(showTimeout);
      showTimeout = undefined;
      return;
    }
    b.t = getCookie('passcode');
    showTimeout = setTimeout(function() {
      b.t = '*'.repeat(getCookie('passcode').length);
      showTimeout = undefined;
    }, SHOW_PASSCODE_MS);
  }

  function whatIsCopyPasscode() {
    alert('Copy passcode to the clipboard: If you want to play this game on ' +
      'a different browser you can copy the passcode to the clipboard and ' +
      'paste it in the other.  Only known passcodes will work.');
  }
  function copyPasscode() {
    navigator.clipboard.writeText(getCookie('passcode'));
  }

  function whatIsPastePasscode() {
    alert('Paste a passcode from the clipboard');
  }
  function pastePasscode() {
    navigator.clipboard.readText().
    then(function(data) {
      setCookie('passcode', data);
      const b = getButton('showPasscode');
      b.t = getCookie('passcode');
      setTimeout(function() {
        b.t = '*'.repeat(getCookie('passcode').length);
      }, 1000);
    });
  }

  function whatIsAccount() {
    alert('Account and session info: Display and edit account and session ' +
      'settings.');
  }
  function account() {
    alert('Open account settings.');
  }

  if(!document.cookie) getAPasscode();

  function getCookie(cname) {
    let name = cname + "=";
    let decodedCookie = decodeURIComponent(document.cookie);
    let ca = decodedCookie.split(';');
    for(let i = 0; i <ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return "";
  }

  //             x    y  w    h   f   lw s     ss         fill  fs
  buttonsM.push([625, 32, 15, 15, 15, 1, false, '#00FF00', false, '#000000',
  // text                         textFS       font  callback         skip
    '?',                          '#FFFFFF3F', '15', whatIsAPasscode, false,
  // id                chamfered
    '', false]);
  buttonsM.push([564, 1, 135, 30, 15, 1, true, '#00FF00', true, '#000000',
    '*'.repeat(getCookie('passcode').length), '#FFFF00FF', '15',
    showPasscode,    false, 'showPasscode',    false]);

  buttonsM.push([708, 32,  15, 15, 15, 1, false, '#00FF00', false, '#000000',
    '?',                          '#FFFF003F', '15', whatIsCopyPasscode,  false,
    '',         false]);
  buttonsM.push([699, 1,  30, 30, 15, 1, true, '#00FF00', true, '#000000',
    'C',                          '#FFFF00FF', '15', copyPasscode,    false,
    '',         false]);

  buttonsM.push([740, 32,  15, 15, 15, 1, false, '#00FF00', false, '#000000',
    '?',                          '#FFFF003F', '15', whatIsPastePasscode, false,
    '',         false]);
  buttonsM.push([731, 1,  30, 30, 15, 1, true, '#00FF00', true, '#000000',
    'P',                          '#FFFF00FF', '15', pastePasscode,   false,
    '',         false]);
  buttonsM.push([770, 32,  15, 15, 15, 1, false, '#00FF00', false, '#000000',
    '?',                          '#FFFF003F', '15', whatIsAccount, false,
    '',         false]);
  buttonsM.push([761, 1,  30, 30, 15, 1, true, '#00FF00', true, '#000000',
    'A',                          '#FFFF00FF', '15', account,         false,
    '',         false]);

  function getAPasscode() {
    get({passcode:'getPasscode'},'127.0.0.1', 80,
      function() {
      if (this.readyState === 4 && this.status === 200) {
        console.log(this.responseText)
        const parsed = JSON.parse(this.responseText);
        if(parsed.err) {
          const message = `getAPasscode:error:"${parsed.err}"`;
          alert(message);
        } else {
          setCookie('passcode', parsed.passcode);
          getButton('showPasscode').t = getCookie('passcode');
        }
      }
    })
  }

  function setCookie(cname, cvalue) {
    const exdays = 365; // all these cookies will expire in a year
    const d = new Date();
    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
    let expires = `expires=${d.toUTCString()}`;
    document.cookie = `${cname}=${cvalue};${expires}`;
  }
}
